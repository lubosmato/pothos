// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`giraffe example > generates expected schema 1`] = `
"interface Animal {
  diet: Diet
}

interface AnimalFromClass {
  diet: Diet
}

interface AnimalFromRef {
  diet: Diet
}

"""
A date string, such as 2007-12-03, compliant with the \`full-date\` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

enum Diet {
  CARNIVOROUS
  HERBIVOROUS
  OMNIVORIOUS
}

input FindGiraffeInput {
  name: String!
}

"""Long necks, cool patterns, taller than you."""
type Giraffe implements Animal {
  age: Int

  """
  While Giraffes are herbivores, they do eat the bones of dead animals to get extra calcium
  """
  diet: Diet
  height(unit: LengthUnit! = Meters): Float
  name: String
  oldName(old: Boolean @deprecated(reason: "because")): String @deprecated(reason: "should use name instead")
  species: GiraffeSpecies
}

union GiraffeFact = GiraffeNumericFact | GiraffeStringFact

"""Long necks, cool patterns, taller than you."""
type GiraffeFromClass implements AnimalFromClass {
  age: Int
  diet: Diet
  name: String
}

"""Long necks, cool patterns, taller than you."""
type GiraffeFromRef implements AnimalFromRef {
  age: Int
  diet: Diet
  name: String
}

input GiraffeInput {
  birthdate: String!
  height: Float!
  name: String!
}

type GiraffeNumericFact {
  fact: String
  value: Float
}

enum GiraffeSpecies {
  Masai
  Northern
  Reticulated

  """Also known as two-horned giraffe"""
  Southern
}

type GiraffeStringFact {
  fact: String
}

enum LengthUnit {
  Feet
  Meters
}

type Mutation {
  createGiraffe(input: GiraffeInput!): GiraffeFromClass
  createGiraffeWithFriends(input: RecursiveGiraffeInput!): [GiraffeFromClass!]
  findGiraffe(where: FindGiraffeInput!): GiraffeFromClass
}

scalar PositiveInt

type Query {
  animal: Animal
  animalClass: AnimalFromClass
  animalRef: AnimalFromRef
  date: Date
  giraffe: Giraffe
  giraffeClass: GiraffeFromClass
  giraffeFacts: [GiraffeFact!]
  giraffeRef: GiraffeFromRef
  positive: PositiveInt
}

input RecursiveGiraffeInput {
  birthdate: String!
  friends: [GiraffeInput!]
  height: Float!
  name: String!
}"
`;

exports[`giraffe example > mutations > mutate some stuff 1`] = `
{
  "data": {
    "createGiraffe": {
      "age": 5,
      "diet": "HERBIVOROUS",
      "name": "James",
    },
    "createGiraffeWithFriends": [
      {
        "age": 5,
        "diet": "HERBIVOROUS",
        "name": "James",
      },
      {
        "age": 5,
        "diet": "HERBIVOROUS",
        "name": "James",
      },
    ],
  },
}
`;

exports[`giraffe example > queries > query some stuff 1`] = `
{
  "data": {
    "animal": {
      "diet": "HERBIVOROUS",
      "name": "James",
    },
    "animalClass": {
      "diet": "HERBIVOROUS",
      "name": "James",
    },
    "animalRef": {
      "diet": "HERBIVOROUS",
      "name": "James",
    },
    "date": "2012-12-12",
    "giraffe": {
      "age": 5,
      "diet": "HERBIVOROUS",
      "height": 5.2,
      "heightInFeet": 17.061200000000003,
      "name": "James",
    },
    "giraffeClass": {
      "age": 5,
      "diet": "HERBIVOROUS",
      "name": "James",
    },
    "giraffeFacts": [
      {
        "__typename": "GiraffeStringFact",
        "fact": "A giraffeâ€™s spots are much like human fingerprints. No two individual giraffes have exactly the same pattern",
      },
      {
        "__typename": "GiraffeNumericFact",
        "fact": "Top speed (MPH)",
        "value": 35,
      },
    ],
    "giraffeRef": {
      "age": 5,
      "diet": "HERBIVOROUS",
      "name": "James",
    },
    "positive": 5,
  },
}
`;
