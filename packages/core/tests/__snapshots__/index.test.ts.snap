// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Example schema > generates expected schema 1`] = `
"interface Animal {
  species: String
}

scalar AnyJson

"""shape can be last arg"""
type Article {
  comments: [String!]

  """Title of the article, probably click bait"""
  title: String
}

interface Countable {
  count(max: Int!): Int
}

scalar Date

input Example {
  date: Date
  enum: MyEnum
  id: ID!
  id2: Int
  ids: [ID!]!
  ids2: [Int!]
  withNullDefault: Boolean = null
}

input Example2 {
  example: Example!
  id: ID
  ids: [ID!]!
  more: Example2!
}

input Example3 {
  example: Example!
  id: ID
  ids: [ID!]!
  json: AnyJson
  more: Example3!
}

type Giraffe implements Animal {
  a: Boolean
  age: Int
  name: String
  species: String
}

enum MyEnum {
  Bar

  """Some description here"""
  Foo
  Num @deprecated(reason: "Not used anymore..")
}

input NestedListInput {
  date: Date
  list: [[Int!]]!
}

type Query {
  constructor: Boolean
  nestedLists(input: [[[String!]!]]!, nestedListInput: NestedListInput): [[[String!]!]]
  sheep: Sheep
  stuff: [stuff!]
  user: User
}

union SearchResult = Article | User

interface Shaveable {
  extendMePlease: String
  id: ID
  shaved: Boolean
}

type Sheep implements Countable & Shaveable {
  color(id: ID): String
  count(max: Int!): Int
  extendMePlease: String
  id: ID
  shaved: Boolean
  thing: stuff
}

type Subscription {
  event: String
}

type TestExposeList {
  list: [String!]!
  optionalList: [String!]
}

type TestExposeNullable {
  bList: [Boolean]
  blist2: [Boolean!]
  bool: Boolean
}

type User {
  defaultArgs(ids: [ID!]! = ["abc"]): [ID!]
  displayName: String
  fact: String
  firstBornChild: User
  firstName: String
  friends: [User!]
  id: ID
  lastName: String
  list(ids: [ID!]!): [ID!]
  newField: String
  notSparseList(ids: [ID!]!): [ID!]
  optional: String
  partialName(example: Example!, firstN: Int!): String
  recursiveArgs(example2: Example2!, firstN: ID): ID
  related: SearchResult
  sparseList(ids: [ID]!): [ID]!
  stuff: [String!]
}

enum stuff {
  BattlestarGalactica
  Bears
  Beats
}"
`;
