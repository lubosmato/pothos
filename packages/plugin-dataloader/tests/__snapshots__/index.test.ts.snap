// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`dataloader > generates expected schema 1`] = `
"interface Animal {
  type: String
}

type BaseError implements Error {
  message: String
}

type CallCount {
  calls: Int
  loaded: Int
  name: String
}

type Cat implements Animal {
  chasingMouse: Boolean
  type: String
}

type ClassLoadableThing implements Node & TestInterface {
  id: ID!
  idFromInterface: ID
}

type Dog implements Animal {
  chasingTail: Boolean
  type: String
}

interface Error {
  message: String
}

type LoadableParseTest implements Node {
  id: ID!
  idNumber: Int
}

interface Node {
  id: ID!
}

type NullableUser implements TestInterface {
  id: ID
  idFromInterface: ID
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

union Pet = Cat | Dog

type Post {
  content: String
  id: ID
  title: String
}

type PreloadedUser implements TestInterface {
  id: ID
  idFromInterface: ID
}

type PreloadedUserToKey implements TestInterface {
  id: ID
  idFromInterface: ID
}

type Query {
  addOnUser: User
  animals(ids: [ID!]!): [Animal!]
  classThing: ClassLoadableThing
  classThingRef: ClassLoadableThing
  counts: [CallCount!]
  fromContext1: User
  fromContext2: User
  fromContext3: User
  fromContext4: [User!]
  fromContext5: [User!]
  loadableParse: LoadableParseTest
  loadableParseNodes(ids: [ID!]): [LoadableParseTest!]
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
  nullableUser(id: String): NullableUser
  nullableUsers(ids: [String!]): [NullableUser]
  oneToMany(id: ID!): [Post]
  pets(ids: [ID!]!): [Pet!]
  post(id: Int!): Post
  postNullable: Post
  postSorted(id: Int!): Post
  posts(ids: [Int!]!): [Post]
  postsNullable: [Post]!
  postsSorted(ids: [Int!]!): [Post]
  preloadedUser(id: String): PreloadedUser
  preloadedUserToKey(id: String): PreloadedUserToKey
  preloadedUsers(ids: [String!]): [PreloadedUser]
  preloadedUsersToKey(ids: [String!]): [PreloadedUserToKey]
  sortedUser(id: String): SortedUser
  sortedUserToKey(id: String): SortedUserToKey
  sortedUsers(ids: [String!]): [SortedUser]
  sortedUsersToKey(ids: [String!]): [SortedUserToKey]
  user(id: String): User
  userNode(id: String): UserNode
  userNodes(ids: [String!]): [UserNode]
  userWithErrors(id: String): QueryUserWithErrorsResult
  users(ids: [String!]): [User]
  usersWithErrors(ids: [String!]): QueryUsersWithErrorsResult
}

union QueryUserWithErrorsResult = BaseError | QueryUserWithErrorsSuccess

type QueryUserWithErrorsSuccess {
  data: User!
}

union QueryUsersWithErrorsResult = BaseError | QueryUsersWithErrorsSuccess

type QueryUsersWithErrorsSuccess {
  data: [User!]!
}

type SortedUser implements TestInterface {
  id: ID
  idFromInterface: ID
}

type SortedUserToKey implements TestInterface {
  id: ID
  idFromInterface: ID
}

interface TestInterface {
  idFromInterface: ID
}

type User implements TestInterface {
  friends(after: String, before: String, first: Int, last: Int): UserFriendsConnection
  groupFriends(limit: Int! = 5): [User!]
  id: ID
  idFromInterface: ID
  self: User
}

type UserFriendsConnection {
  edges: [UserFriendsEdge]
  pageInfo: PageInfo!
}

type UserFriendsEdge {
  cursor: String!
  node: User!
}

type UserNode implements Node & TestInterface {
  id: ID!
  idFromInterface: ID
}"
`;

exports[`dataloader > queries > primes the dataloader 1`] = `
{
  "counts": [
    {
      "calls": 1,
      "loaded": 1,
      "name": "preloadedUsers",
    },
  ],
  "preloadedUsers": [
    {
      "id": "123",
    },
    {
      "id": "456",
    },
    {
      "id": "789",
    },
  ],
  "user1": {
    "id": "123",
  },
  "user2": {
    "id": "999",
  },
}
`;

exports[`dataloader > queries > primes the dataloader with toKey 1`] = `
{
  "counts": [
    {
      "calls": 1,
      "loaded": 1,
      "name": "preloadedUsersToKey",
    },
  ],
  "preloadedUsersToKey": [
    {
      "id": "123",
    },
    {
      "id": "456",
    },
    {
      "id": "789",
    },
  ],
  "user1": {
    "id": "123",
  },
  "user2": {
    "id": "999",
  },
}
`;

exports[`dataloader > queries > query with errors 1`] = `
{
  "counts": [
    {
      "calls": 1,
      "loaded": 4,
      "name": "users",
    },
    {
      "calls": 1,
      "loaded": 3,
      "name": "userNodes",
    },
    {
      "calls": 1,
      "loaded": 3,
      "name": "posts",
    },
    {
      "calls": 1,
      "loaded": 2,
      "name": "post",
    },
  ],
  "post": null,
  "post2": {
    "id": "2",
  },
  "posts": [
    null,
    null,
    {
      "content": "780 title",
      "id": "780",
      "title": "780 title",
    },
  ],
  "user": null,
  "user2": {
    "id": "2",
  },
  "userNode": null,
  "userNodes": [
    null,
    null,
    {
      "id": "VXNlck5vZGU6Nzg5",
    },
  ],
  "users": [
    null,
    null,
    {
      "id": "789",
    },
  ],
}
`;

exports[`dataloader > queries > query with global ids 1`] = `
{
  "data": {
    "loadableParse": {
      "id": "TG9hZGFibGVQYXJzZVRlc3Q6MQ==",
      "idNumber": 1,
    },
    "loadableParseNodes": [
      {
        "id": "TG9hZGFibGVQYXJzZVRlc3Q6MQ==",
        "idNumber": 1,
      },
      {
        "id": "TG9hZGFibGVQYXJzZVRlc3Q6Mg==",
        "idNumber": 2,
      },
      {
        "id": "TG9hZGFibGVQYXJzZVRlc3Q6MTA=",
        "idNumber": 10,
      },
    ],
  },
}
`;

exports[`dataloader > queries > sorts loaded results 1`] = `
{
  "counts": [
    {
      "calls": 1,
      "loaded": 2,
      "name": "sortedUsers",
    },
  ],
  "sortedUsers": [
    {
      "id": "123",
    },
    {
      "id": "456",
    },
    {
      "id": "789",
    },
  ],
  "user1": {
    "id": "123",
  },
  "user2": {
    "id": "999",
  },
}
`;

exports[`dataloader > queries > sorts loaded results with toKey 1`] = `
{
  "counts": [
    {
      "calls": 1,
      "loaded": 2,
      "name": "sortedUsersToKey",
    },
  ],
  "sortedUsersToKey": [
    {
      "id": "123",
    },
    {
      "id": "456",
    },
    {
      "id": "789",
    },
  ],
  "user1": {
    "id": "123",
  },
  "user2": {
    "id": "999",
  },
}
`;

exports[`dataloader > queries > valid queries 1`] = `
{
  "data": {
    "classThing": {
      "id": "Q2xhc3NMb2FkYWJsZVRoaW5nOjEyMw==",
    },
    "classThingNode": {
      "__typename": "ClassLoadableThing",
      "id": "Q2xhc3NMb2FkYWJsZVRoaW5nOjE=",
    },
    "classThingRef": {
      "id": "Q2xhc3NMb2FkYWJsZVRoaW5nOjE=",
    },
    "counts": [
      {
        "calls": 1,
        "loaded": 6,
        "name": "users",
      },
      {
        "calls": 1,
        "loaded": 4,
        "name": "userNodes",
      },
      {
        "calls": 1,
        "loaded": 4,
        "name": "nullableUsers",
      },
      {
        "calls": 1,
        "loaded": 3,
        "name": "posts",
      },
      {
        "calls": 1,
        "loaded": 2,
        "name": "post",
      },
      {
        "calls": 1,
        "loaded": 3,
        "name": "postsSorted",
      },
      {
        "calls": 1,
        "loaded": 2,
        "name": "postSorted",
      },
    ],
    "fromContext1": {
      "id": "123",
    },
    "fromContext2": {
      "id": "456",
    },
    "fromContext3": {
      "id": "789",
    },
    "fromContext4": [
      {
        "id": "123",
      },
      {
        "id": "456",
      },
    ],
    "nodes": [
      {
        "id": "VXNlck5vZGU6MTIz",
      },
      {
        "id": "VXNlck5vZGU6NDU2",
      },
    ],
    "nullableUser": null,
    "nullableUsers": [
      {
        "id": "123",
      },
      null,
      {
        "id": "789",
      },
    ],
    "oneToMany": [
      {
        "id": "11",
      },
      {
        "id": "12",
      },
      {
        "id": "13",
      },
      null,
    ],
    "post": {
      "id": "1",
    },
    "post2": {
      "id": "2",
    },
    "postNullable": null,
    "postSorted": {
      "id": "1",
    },
    "postSorted2": {
      "id": "2",
    },
    "posts": [
      {
        "content": "123 title",
        "id": "123",
        "title": "123 title",
      },
      {
        "content": "456 title",
        "id": "456",
        "title": "456 title",
      },
    ],
    "posts2": [
      {
        "content": "123 title",
        "id": "123",
        "title": "123 title",
      },
      {
        "content": "789 title",
        "id": "789",
        "title": "789 title",
      },
    ],
    "postsNullable": [
      null,
    ],
    "postsSorted": [
      {
        "content": "123 title",
        "id": "123",
        "title": "123 title",
      },
      {
        "content": "456 title",
        "id": "456",
        "title": "456 title",
      },
    ],
    "postsSorted2": [
      {
        "content": "123 title",
        "id": "123",
        "title": "123 title",
      },
      {
        "content": "789 title",
        "id": "789",
        "title": "789 title",
      },
    ],
    "threeToMany": [
      {
        "id": "31",
      },
      {
        "id": "32",
      },
      {
        "id": "33",
      },
      null,
    ],
    "twoToMany": null,
    "user": {
      "id": "1",
      "idFromInterface": "1",
    },
    "user2": {
      "id": "2",
    },
    "userNode": {
      "id": "VXNlck5vZGU6MQ==",
      "idFromInterface": "1",
    },
    "userNode2": {
      "id": "VXNlck5vZGU6MQ==",
    },
    "userNodes": [
      {
        "id": "VXNlck5vZGU6MTIz",
      },
      {
        "id": "VXNlck5vZGU6NDU2",
      },
      {
        "id": "VXNlck5vZGU6Nzg5",
      },
    ],
    "userNodes2": [
      {
        "id": "VXNlck5vZGU6MTIz",
      },
      {
        "id": "VXNlck5vZGU6NDU2",
      },
      {
        "id": "VXNlck5vZGU6Nzg5",
      },
    ],
    "userWithErrors": {
      "__typename": "BaseError",
      "message": "Invalid ID -1",
    },
    "userWithoutError": {
      "__typename": "QueryUserWithErrorsSuccess",
      "data": {
        "id": "1",
      },
    },
    "users": [
      {
        "id": "123",
      },
      {
        "id": "456",
      },
      {
        "id": "789",
      },
    ],
    "usersWithErrors": {
      "__typename": "BaseError",
      "message": "Ids required",
    },
    "usersWithoutError": {
      "__typename": "QueryUsersWithErrorsSuccess",
      "data": [
        {
          "id": "1",
        },
        {
          "id": "2",
        },
      ],
    },
  },
}
`;
