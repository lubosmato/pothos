// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`errors plugin > generates expected schema 1`] = `
"type BaseError implements Error {
  message: String
}

type DirectResult {
  id: ID
}

interface Error {
  message: String
}

type Extended2Error implements Error {
  code: Int
  message: String
}

type ExtendedError implements Error {
  code: Int
  message: String
}

type LengthError implements Error {
  message: String
  minLength: Int
}

type Query {
  directResult(shouldThrow: Boolean): QueryDirectResultResult
  extendedError(throw: String): QueryExtendedErrorResult
  extendedErrorList(throw: String): QueryExtendedErrorListResult
  fieldWIthValidation(string: String): QueryFieldWIthValidationResult
  hello(name: String!): QueryHelloResult
  helloWithMinLength(name: String!): QueryHelloWithMinLengthResult
  simpleError(throw: Boolean): QuerySimpleErrorResult
  validation2(stringList: [String!]): QueryValidation2Result
}

union QueryDirectResultResult = BaseError | DirectResult

union QueryExtendedErrorListResult = BaseError | Extended2Error | ExtendedError | QueryExtendedErrorListSuccess

type QueryExtendedErrorListSuccess {
  data: [String]!
}

union QueryExtendedErrorResult = BaseError | Extended2Error | ExtendedError | QueryExtendedErrorSuccess

type QueryExtendedErrorSuccess {
  data: String!
}

union QueryFieldWIthValidationResult = BaseError | QueryFieldWIthValidationSuccess | ZodError

type QueryFieldWIthValidationSuccess {
  result: Boolean!
}

union QueryHelloResult = BaseError | QueryHelloSuccess

type QueryHelloSuccess {
  data: String!
}

union QueryHelloWithMinLengthResult = BaseError | LengthError | QueryHelloWithMinLengthSuccess

type QueryHelloWithMinLengthSuccess {
  data: String!
}

union QuerySimpleErrorResult = BaseError | QuerySimpleErrorSuccess

type QuerySimpleErrorSuccess {
  data: String!
}

union QueryValidation2Result = BaseError | QueryValidation2Success | ZodError

type QueryValidation2Success {
  result: Boolean!
}

type ZodError implements Error {
  fieldErrors: [ZodFieldError!]
  message: String
}

type ZodFieldError {
  message: String
  path: [String!]
}"
`;

exports[`errors plugin > supports generating custom names 1`] = `
"type BaseError implements Error {
  message: String
}

type DirectResult {
  id: ID
}

union DirectResult_CUSTOM_UNION_NAME = BaseError | DirectResult

interface Error {
  message: String
}

type Extended2Error implements Error {
  code: Int
  message: String
}

type ExtendedError implements Error {
  code: Int
  message: String
}

type ExtendedErrorList_CUSTOM_RESULT_NAME {
  data: [String]!
}

union ExtendedErrorList_CUSTOM_UNION_NAME = BaseError | Extended2Error | ExtendedError | ExtendedErrorList_CUSTOM_RESULT_NAME

type ExtendedError_CUSTOM_RESULT_NAME {
  data: String!
}

union ExtendedError_CUSTOM_UNION_NAME = BaseError | Extended2Error | ExtendedError | ExtendedError_CUSTOM_RESULT_NAME

type FieldWIthValidation_CUSTOM_RESULT_NAME {
  result: Boolean!
}

union FieldWIthValidation_CUSTOM_UNION_NAME = BaseError | FieldWIthValidation_CUSTOM_RESULT_NAME | ZodError

type HelloWithMinLength_CUSTOM_RESULT_NAME {
  data: String!
}

union HelloWithMinLength_CUSTOM_UNION_NAME = BaseError | HelloWithMinLength_CUSTOM_RESULT_NAME | LengthError

type Hello_CUSTOM_RESULT_NAME {
  data: String!
}

union Hello_CUSTOM_UNION_NAME = BaseError | Hello_CUSTOM_RESULT_NAME

type LengthError implements Error {
  message: String
  minLength: Int
}

type Query {
  directResult(shouldThrow: Boolean): DirectResult_CUSTOM_UNION_NAME
  extendedError(throw: String): ExtendedError_CUSTOM_UNION_NAME
  extendedErrorList(throw: String): ExtendedErrorList_CUSTOM_UNION_NAME
  fieldWIthValidation(string: String): FieldWIthValidation_CUSTOM_UNION_NAME
  hello(name: String!): Hello_CUSTOM_UNION_NAME
  helloWithMinLength(name: String!): HelloWithMinLength_CUSTOM_UNION_NAME
  simpleError(throw: Boolean): SimpleError_CUSTOM_UNION_NAME
  validation2(stringList: [String!]): Validation2_CUSTOM_UNION_NAME
}

type SimpleError_CUSTOM_RESULT_NAME {
  data: String!
}

union SimpleError_CUSTOM_UNION_NAME = BaseError | SimpleError_CUSTOM_RESULT_NAME

type Validation2_CUSTOM_RESULT_NAME {
  result: Boolean!
}

union Validation2_CUSTOM_UNION_NAME = BaseError | Validation2_CUSTOM_RESULT_NAME | ZodError

type ZodError implements Error {
  fieldErrors: [ZodFieldError!]
  message: String
}

type ZodFieldError {
  message: String
  path: [String!]
}"
`;
